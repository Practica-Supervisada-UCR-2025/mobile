// Mocks generated by Mockito 5.4.5 from annotations
// in mobile/test/src/auth/_children/register/presenter/bloc/register_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mobile/src/auth/auth.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthUserInfo_0 extends _i1.SmartFake implements _i2.AuthUserInfo {
  _FakeAuthUserInfo_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [RegisterRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRegisterRepository extends _i1.Mock
    implements _i2.RegisterRepository {
  MockRegisterRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i2.AuthUserInfo> register(
    String? name,
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#register, [name, email, password]),
            returnValue: _i3.Future<_i2.AuthUserInfo>.value(
              _FakeAuthUserInfo_0(
                this,
                Invocation.method(#register, [name, email, password]),
              ),
            ),
          )
          as _i3.Future<_i2.AuthUserInfo>);
}
